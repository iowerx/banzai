<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.werx</groupId>
    <artifactId>banzai</artifactId>
    <packaging>jar</packaging>
    <version>0.0.1-SNAPSHOT</version> <!-- unused -->

    <description>Testing a Pipeline Shared Library with Spock</description>

    <repositories>
        <repository>
            <id>jenkins-releases</id>
            <name>Jenkins Releases</name>
            <url>https://repo.jenkins-ci.org/public</url>
        </repository>
        <repository>
            <id>central</id>
            <name>Maven Central</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <groovy.spock.version>1.1-groovy-2.4</groovy.spock.version>
        <groovy.gmaven.pluginVersion>1.6.1</groovy.gmaven.pluginVersion>

        <jenkins.version>2.263.1</jenkins.version>
        <jenkins.servlet.version>3.1.0</jenkins.servlet.version>
        <jenkins.workflow.cps.version>2.90</jenkins.workflow.cps.version>

        <jenkins-spock.version>2.0.1</jenkins-spock.version>

        <junit.version>4.13.1</junit.version>

        <logback.configration>logback-test.xml</logback.configration>
        <log.dir>${project.build.directory}/log</log.dir>
        <test.loglevel>ERROR</test.loglevel>
        <log.logback.version>1.2.3</log.logback.version>
        <log.slf4j.version>1.7.25</log.slf4j.version>

        <surefire.pluginVersion>2.22.0</surefire.pluginVersion>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Transitive Dependencies that need Managing -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>30.0-jre</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.2.11</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${log.logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${log.logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${jenkins.servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>jenkins-core</artifactId>
            <version>${jenkins.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps</artifactId>
            <version>${jenkins.workflow.cps.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pipeline-utility-steps</artifactId>
            <version>2.3.1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${log.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${log.slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${groovy.spock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- 'echo' pipeline step -->
        <!-- 'sleep' pipeline step, however it is not mocking with jenkins-spock properly -->
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-basic-steps</artifactId>
            <version>2.23</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides the sh() pipeline step -->
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-durable-task-step</artifactId>
            <version>2.39</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides the slackSend() pipeline step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>slack</artifactId>
            <version>2.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides stage() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pipeline-stage-step</artifactId>
            <version>2.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-job</artifactId>
            <version>2.40</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides sshagent() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ssh-agent</artifactId>
            <version>1.22.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides sshagent() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>docker-commons</artifactId>
            <version>1.15</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <!-- provides sshagent() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>docker-workflow</artifactId>
            <version>1.23</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <!-- provides libraryResource() step -->
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps-global-lib</artifactId>
            <version>2.19</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <!-- provides httpRequest() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>http_request</artifactId>
            <version>1.8.23</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.homeaway.devtools.jenkins</groupId>
            <artifactId>jenkins-spock</artifactId>
            <version>${jenkins-spock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- provides withCredentials() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>credentials-binding</artifactId>
            <version>1.24</version>
        </dependency>

        <dependency>
            <!-- provides sshLauncher -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ssh-slaves</artifactId>
            <version>1.31.5</version>
        </dependency>

        <dependency>
            <!-- provides sshLauncher -->
            <groupId>org.csanchez.jenkins.plugins</groupId>
            <artifactId>kubernetes</artifactId>
            <version>1.29.2</version>
        </dependency>

        <dependency>
            <!-- provides cleanWs() step -->
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ws-cleanup</artifactId>
            <version>0.38</version>
        </dependency>

        <dependency>
            <!-- provides GroovyScript -->
            <groupId>org.biouno</groupId>
            <artifactId>uno-choice</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180130</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.2</version>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.26</version>
        </dependency>

    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>default-test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <forkCount>1</forkCount>
                                <testSourceDirectory>src/test/groovy</testSourceDirectory>
                                <includes>
                                    <include>**/*Spec</include>
                                </includes>
                                <useManifestOnlyJar>false</useManifestOnlyJar>
                                <!--<systemPropertyVariables>-->
                                <!--<root.loglevel>${test.loglevel}</root.loglevel>-->
                                <!--<root.appender>Stdout</root.appender>-->
                                <!--<test.loglevel>${test.loglevel}</test.loglevel>-->
                                <!--<logdir>${logdir}</logdir>-->
                                <!--</systemPropertyVariables>-->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${groovy.gmaven.pluginVersion}</version>
                    <executions>
                        <execution>
                            <id>groovy</id>
                            <goals>
                                <goal>addSources</goal>
                                <goal>addTestSources</goal>
                                <goal>compile</goal>
                                <goal>compileTests</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>
                                        <directory>src</directory>
                                        <includes>
                                            <include>**/*.groovy</include>
                                        </includes>
                                    </source>
                                </sources>
                                <testSources>
                                    <testSource>
                                        <directory>test</directory>
                                        <includes>
                                            <include>**/*.groovy</include>
                                        </includes>
                                    </testSource>
                                </testSources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>

        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <testResources>
            <testResource>
                <includes>
                    <include>vars/**/*.groovy</include>
                </includes>
                <directory>${project.basedir}</directory>
            </testResource>
            <testResource>
                <directory>test/resources</directory>
            </testResource>
            <testResource>
                <directory>resources</directory>
            </testResource>
        </testResources>

    </build>

</project>
